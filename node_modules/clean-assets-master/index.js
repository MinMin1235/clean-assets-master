const fs = require('fs');
const path = require('path');



// const imageFolder = './src/assets';
// const directoryRoot = './src';

const redColor = '\x1b[31m';
const greenColor = '\x1b[32m';
const waringColor = '\x1b[33m';

const imageFolder = process?.argv[2];
const directoryRoot = process?.argv[3];

if (!directoryRoot || !imageFolder) {
    console.log(redColor, "directory source or target undefined");
    return;
}

function searchFiles(directory, searchText, callback) {

    if (directory.includes(imageFolder.replace('./', ''))) {
        callback(null, []);
        return;
    }

    fs.readdir(directory, (err, files) => {
        if (err) {
            callback(err, null);
            return;
        }

        const promises = [];

        files.forEach(file => {
            const filePath = path.join(directory, file);

            promises.push(
                new Promise((resolve, reject) => {
                    fs.stat(filePath, (err, stats) => {
                        if (err) {
                            reject(err);
                            return;
                        }
                        if (stats.isDirectory()) {
                            searchFiles(filePath, searchText, (err, subFiles) => {
                                if (err) {
                                    reject(err);
                                } else {
                                    resolve(subFiles);
                                }
                            });
                        } else {
                            fs.readFile(filePath, 'utf8', (err, content) => {
                                if (err) {
                                    reject(err);
                                    return;
                                }
                                if (content.includes(searchText)) {
                                    console.log(waringColor, "Found file");
                                    resolve(filePath);
                                } else {
                                    resolve(null);
                                }
                            });
                        }
                    });
                })
            );
        });

        Promise.all(promises)
            .then(foundFiles => {
                const foudFile = foundFiles.flat().filter(Boolean);
                callback(null, foudFile);
            })
            .catch(err => {
                callback(err, null);
            });
    });
}






function findFiles(directory, callback) {
    fs.readdir(directory, (err, files) => {
        if (err) {
            callback(err, null);
            return;
        }

        const filePaths = [];

        let count = files.length;

        if (count === 0) {
            callback(null, filePaths);
            return;
        }

        files.forEach(file => {
            const filePath = path.join(directory, file);
            fs.stat(filePath, (err, stats) => {
                if (err) {
                    callback(err, null);
                    return;
                }
                if (stats.isFile()) {
                    if (file !== '.DS_Store') { // Loại bỏ tệp .DS_Store
                        filePaths.push(filePath);
                    }
                    count--;
                    if (count === 0) {
                        callback(null, filePaths);
                    }
                } else if (stats.isDirectory()) {
                    findFiles(filePath, (err, subFiles) => {
                        if (err) {
                            callback(err, null);
                            return;
                        }
                        filePaths.push(...subFiles);
                        count--;
                        if (count === 0) {
                            callback(null, filePaths);
                        }
                    });
                } else {
                    count--;
                    if (count === 0) {
                        callback(null, filePaths);
                    }
                }
            });
        });
    });
}

function searchFiles2(result) {
    result.forEach(function (file, index) {
        const fileFormat = file.split('.')[0].replace('@2x', '').replace('@3x', '');
        let imageAsserst = imageFolder.split('/');
        let parentFolder = imageAsserst[imageAsserst.length - 1];
        const textSearch = parentFolder + fileFormat.split(parentFolder)[1];

        searchFiles(directoryRoot, textSearch, (err, result) => {
            if (err) {
                console.error('Error:', err);
                return;
            }
            if (result.length == 0) {
                if (file.includes('.png') || file.includes('.jpg') || file.includes('.jpg')) {
                    const pathAssets = path.join(__dirname, file).replace('/node_modules/clean-assets-master', '');
                    fs.unlink(pathAssets, (err) => {
                        if (err) {
                            console.error('Error deleting file:', err);
                            return;
                        }
                        console.log(greenColor, `File ${file} deleted successfully`);
                    });
                }
            }
        });
    })
}

findFiles(imageFolder, (err, result) => {
    if (err) {
        console.error('Error:', err);
        return;
    }
    searchFiles2(result);
});